<div id="menu-shadow" ng-init="menuVisible = false" ng-show="menuVisible"></div>
<header ng-class="page.headerClass">
    <div id="menu-button" ng-click="menuVisible = !menuVisible" >
        <div ng-class="{'hamburger half': menuVisible, 'hamburger': !menuVisible}"></div>
    </div>
    
    <div id="breadcrumb">
        <div class="title">{[{page.title}]}</div>
        <div ng-show="page.secondaryTitle">
            <div class="arrow"></div>
            <div class="title secondary">{[{page.secondaryTitle}]}</div>
        </div>
    </div>
    
    <div id="search" ng-init="showSearch = false" ng-class="{'active' : showSearch}" 
         ng-show="page.searchEnabled">
        <div class="icon" 
             ng-click="showSearch = !showSearch; clearSearch(); menuVisible = false; focusSearch();"
             ng-disabled="menuVisible">
        </div>
        <input type="text" placeholder="Search" 
               ng-model="searchQuery" 
               ng-model-options="{debounce:500}"
               ng-show="showSearch"
               ng-disabled="menuVisible" />
    </div>
</header>

<div id="menu" ng-show="menuVisible" ng-include="'/partials/menu.html'" ng-controller="menuController">
</div>

<section class="viewport">
    <div id="mask" ng-show="menuVisible" ng-click="menuVisible = false"></div>
    <div ng-view class="ngview page" ng-class="page.class"></div>
</section>

<script>       
    
    var app = angular.module("app", ['ngRoute', 'ngAnimate', 'ngResource', 'truncate']);

    app.config(function($interpolateProvider) {
          $interpolateProvider.startSymbol('{[{');
          $interpolateProvider.endSymbol('}]}');
    });
    
    app.config(['$routeProvider',
        function($routeProvider) {
            $routeProvider.
            when('/', {
                templateUrl: 'partials/main.html',
                controller: 'masonController'
            }).
            when('/visualisations/:id', {
                templateUrl: 'partials/visualisation.html',
                controller: 'mainController',
            }).
            when('/submit/advert', {
                templateUrl: 'partials/submit-advert.html',
                controller: 'submitAdvertController',
            }).
            when('/submit/visualisation', {
                templateUrl: 'partials/submit-visualisation.html',
                controller: 'submitVisualisationController',
            }).               
            when('/moderate', {
                templateUrl: 'partials/moderate.html',
                controller: 'moderateController',
            }).
            otherwise({
                redirectTo: '/'
            });
      }]);

    app.controller('mainController', function($scope, $rootScope, $route) {

        $scope.clearSearch = function() { jQuery("#search input").val(""); }
            
        $scope.$on('$routeChangeSuccess', function(next, current) { 
            $scope.menuVisible = false;
         });
        
        $scope.focusSearch = function() {
            setTimeout(function() {
                $("#search input").focus()
            }, 500);
        }
        
    });
    
        
    app.factory('Visualisation', ['$resource',
        function($resource){
            return $resource('visualisations/:id.json', {visId : "@id"}, {
                query: { method:'GET', url:'visualisations.json', isArray:true},
                approve: { method:'PATCH', url:'visualisations/:id/approve.json'},
                reject: { method:'PATCH', url:'visualisations/:id/reject.json'}
            });
    }]);
    
    app.controller('menuController', function($scope, $rootScope, $route) {
        
        $scope.user = { name: "Joe Bloggs", image: "http://api.randomuser.me/portraits/thumb/men/88.jpg", admin:true };

        $scope.visLinks = [{name : "Visualisations", url : "/", img:"visualisations.png"},
                           {name : "New", url : "", img:"ic_new_releases_black_24dp.png"},
                           {name : "Highest Rated", url : "", img : "ic_grade_black_24dp.png"},
                           {name : "Mine", url : "", img:"ic_person_black_24dp.png"}]
        
        $scope.contentLinks = [{name : "Submit Visualisation", class:"submit vis", url : "/submit/visualisation", img:"ic_add_box_black_24dp.png"},
                               {name : "Submit Advert", class : "submit advert", url : "/submit/advert", img:"ic_add_box_black_24dp.png"}]
        
        $scope.adminLinks = [{name : "Moderate Content", class:"moderate", url : "/moderate", img:"ic_check_box_black_24dp.png"},
                             {name : "Schedule Content", class : "schedule", url : "/schedule", img:"ic_timer_black_24dp.png"}]

        $scope.links = $scope.visLinks.concat($scope.contentLinks).concat($scope.adminLinks);
        
        $scope.selected = $scope.links[0];
                    
        $rootScope.$on('$routeChangeSuccess', function(next, current) { 
            for (route in $route.routes) {
                if ($route.routes[route].templateUrl == current.loadedTemplateUrl) {
                    $scope.selectedUrl = $route.routes[route].originalPath;
                    break;
                }
            }
         });

    });

    app.controller('submitAdvertController', function($scope, $rootScope, $route) {
        $rootScope.page = {title: "Submit Advert", headerClass:"submit-advert", searchEnabled : false, class:"submit"}
    });

    app.controller('submitVisualisationController', function($scope, $rootScope, $route) {
        $rootScope.page = {title: "Submit Visualisation",  headerClass:"submit-visualisation", searchEnabled : false, class:"submit"}
    });

    app.controller('masonController', function($scope, $rootScope, Visualisation) {
    
        $rootScope.page = {title: "Visualisations",  headerClass:"visualisations", searchEnabled : true, class:"visualisations"}
    
        $scope.visItems = Visualisation.query()
    });

    app.controller('moderateController', function(Visualisation, $scope, $rootScope) {
        $rootScope.page = {title: "Moderate Content",  headerClass:"moderate", searchEnabled : true, class:"moderate"}
        
        $scope.content = Visualisation.query({needsModeration : 'true', expandUser: 'true'})
        
        $scope.fadeOutRow = function(childElement, item) {
            var row = $(childElement).parents("tr");
            row.animate({opacity: 0}, 250);
            setTimeout(function() { 
                // Add in another element which we can animate, so table rows do not 'jump' up
                var shrinker = $("<div/>").addClass("shrinker").css({width : "100%", height : row.css("height")});
                $(shrinker).insertAfter(row);
                row.remove(); 
                shrinker.slideUp(250);
                
                setTimeout(function() { 
                    shrinker.remove();
                    
                    // Remove content item from content
                    $scope.content.splice($scope.content.indexOf(item), 1);
                    
                    $scope.$apply();
                }, 250);
            }, 250)
        }
        
        
        $scope.approve = function(event, item) {
            Visualisation.approve({id : item.id})
            $scope.fadeOutRow(event.target);
        }
        
        $scope.reject = function(event, item) {
            Visualisation.reject({id : item.id})
            $scope.fadeOutRow(event.target, item);
        }

    });
    
    app.directive('horizontalScroll', function() {
    return {
        link: function(scope, element, attrs) {
            $(element).mousewheel(function(event, delta) {
              this.scrollLeft -= (delta * 30);
              event.preventDefault();
           });
        }
    }});
        
    app.directive('colorThiefSrc', function() {
     return {
        link: function(scope, element, attrs) {
            var img = new Image();
            img.src = attrs.colorThiefSrc;
            
            $(img).on('load', function() {               
                var color = new ColorThief().getColor(img);
                
                $(element).css("background-color" , "rgb(" + color + ")");

                var brightness = Math.sqrt( .241 * Math.pow(color[0], 2) + 
                                            .691 * Math.pow(color[1], 2) + 
                                            .068 * Math.pow(color[2], 2));
                
                if (brightness > 255/2) {
                    $(element).addClass("bright-background");
                }
                
            });
        }
    }; 
    }); 
</script>
